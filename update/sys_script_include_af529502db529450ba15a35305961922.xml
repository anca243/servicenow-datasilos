<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_datasilos.GetSilosFromUserByTypes</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Returns all silos that the user belongs to, filtered by the type of the group in the silo.</description>
        <mobile_callable>false</mobile_callable>
        <name>GetSilosFromUserByTypes</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function GetSilosFromUserByTypes(strUserSysId, aTypes)
{
	var RenderValue = x_snc_devtools.RenderValue;
	var ArrayUnique = x_snc_devtools.ArrayUnique;
	var GetArrayValue = x_snc_devtools.GetArrayValue;
	var GetValue = x_snc_devtools.GetValue;

	aTypes = GetArrayValue(aTypes);
	
	var aUserGroups = GetGroupsFromUser(strUserSysId);

	var aUserSilos = [];

	// Identify the user's silos based on its groups
	if (aUserGroups.length > 0)
	{
		var grSilosToGroups = new GlideRecord('x_snc_datasilos_m2m_groups_datasilos');
		var queryGroups = grSilosToGroups.addQuery('group','=',GetValue(aUserGroups,0));
		for (var nGroupIndex = 1; nGroupIndex < aUserGroups.length; nGroupIndex++)
		{
			queryGroups.addOrCondition('group','=',aUserGroups[nGroupIndex]);
		}

		if (aTypes.length > 0)
		{
			var queryTypes = grSilosToGroups.addQuery('type','=',GetValue(aTypes,0));
			for (var nTypeIndex = 1; nTypeIndex < aTypes.length; nTypeIndex++)
			{
				queryTypes.addOrCondition('type','=',aTypes[nTypeIndex]);
			}
		}
		
		grSilosToGroups.query();
		while (grSilosToGroups.next())
		{
			var strSiloSysId = grSilosToGroups.getValue('datasilo');
			aUserSilos.push(strSiloSysId);
			
			// If we just added a supervisor silo, check for supersilo relationships and add sub silos to the user's silo list
			if (grSilosToGroups.getValue('type') == 'supervisor')
			{
				var grSilosToSilos = new GlideRecord('x_snc_datasilos_m2m_datasilos_datasilos');
				grSilosToSilos.addQuery('datasilo_super','=',strSiloSysId);
				grSilosToSilos.query();
				while (grSilosToSilos.next())
				{
					aUserSilos.push(grSilosToSilos.getValue('datasilo_sub'));
				}
			}
		}
	}
	
	// Remove duplicates
	aUserSilos = ArrayUnique(aUserSilos);
	
	return aUserSilos;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-07-30 14:38:36</sys_created_on>
        <sys_id>af529502db529450ba15a35305961922</sys_id>
        <sys_mod_count>17</sys_mod_count>
        <sys_name>GetSilosFromUserByTypes</sys_name>
        <sys_package display_value="DataSilos WORK IN PROGRESS" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataSilos WORK IN PROGRESS">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_af529502db529450ba15a35305961922</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-04-25 08:01:08</sys_updated_on>
    </sys_script_include>
</record_update>
