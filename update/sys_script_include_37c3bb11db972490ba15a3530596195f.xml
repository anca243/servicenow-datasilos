<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_datasilos.HtmlRenderStatus</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Render a html fragment to provide the current status of DataSilos</description>
        <mobile_callable>false</mobile_callable>
        <name>HtmlRenderStatus</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function HtmlRenderStatus()
{
	var RenderValue = x_snc_devtools.RenderValue;
	var GetValue = x_snc_devtools.GetValue;
	var GetBoolValue = x_snc_devtools.GetBoolValue;
	var GetKeys = x_snc_devtools.GetKeys;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var HtmlRenderLink = x_snc_devtools.HtmlRenderLink;
	var GetInstanceListPath = x_snc_devtools.GetInstanceListPath;
	var GetInstanceRecordPath = x_snc_devtools.GetInstanceRecordPath;
	var RenderDateTimeUser = x_snc_devtools.RenderDateTimeUser;
	var GetAppName = x_snc_devtools.GetAppName;
	var IsDomainSeparationInstalled = x_snc_devtools.IsDomainSeparationInstalled;
	var IsTableDomainSeparated = x_snc_devtools.IsTableDomainSeparated;
	var IsValidRecord = x_snc_devtools.IsValidRecord;


	
	function HtmlRenderSpanStatus(bActive,bGrey)
	{
		var strHtml = '';
		var strColor = '';
		if (bGrey)
		{
			strColor += 'grey';
		}
		else
		{
			if (bActive == true)
			{
				strColor = 'green';
			}
			else
			{
				strColor = 'red';
			}
		}
		
		if (bActive == true)
		{
			strHtml = '<span style="color: '+strColor+';">ACTIVE</span>';
		}
		else
		{
			strHtml = '<span style="color: '+strColor+';">INACTIVE</span>';
		}
		return strHtml;
	}
	
	function HtmlRenderSpanDomainSeparationStatus(strTable)
	{
		if (IsDomainSeparationInstalled() == false)
		{
			return '<span style="color: grey;">NOT INSTALLED</span>';
		}
		var bSeparated = IsTableDomainSeparated(strTable);
		if (bSeparated == true)
		{
			return '<span style="color: green;">YES</span>';
		}
		return '<span style="color: black;">NO</span>';
	}
	

	var strHtml = '';
		
	strHtml += '<style media="screen">';
	strHtml += 'td,th { padding-right: 10px; }';
	strHtml += '</style>';

	var status = GetStatus();
	
	var plugin_status = GetPluginStatus();
	var aColumns = GetKeys(GetValue(plugin_status,'columns'));	
	
	var bActive = GetBoolValue(GetValue(status,'active')); 
	var strHtmlStatus = HtmlRenderSpanStatus(bActive);
	strHtml += '<h1>DataSilos Status - '+strHtmlStatus+'</h1>';
	
	var strHtmlTables = '';
	var aTables = GetKeys(GetValue(status,'tables'));
	//strHtmlTables += RenderValue(aTables);	
	strHtmlTables += '<table><tbody>';
		strHtmlTables += '<tr>';
			strHtmlTables += '<th>Table</th>';
			strHtmlTables += '<th>Active</th>';
			strHtmlTables += '<th>Total</th>';
			strHtmlTables += '<th>Hidden</th>';
			strHtmlTables += '<th>Unmaintained</th>';
			strHtmlTables += '<th>Backmarker</th>';
			strHtmlTables += '<th></th>';
			strHtmlTables += '<th>Status Updated</th>';
			strHtmlTables += '<th>Domain Separation</th>';
			
			for (var nColumn = 0; nColumn < aColumns.length; nColumn++)
			{
				var strHeader = GetValue(plugin_status,'columns',aColumns[nColumn],'header');
				strHtmlTables += '<th>'+strHeader+'</th>';
			}

	strHtmlTables += '</td>';

	for (var nTable = 0; nTable < aTables.length; nTable++)
	{
		var strTable = aTables[nTable];
		strHtmlTables += '<tr>';

		var strPath = GetInstanceListPath(strTable,GetViewForTable(strTable));
		
		strHtmlTables += '<td>';
			strHtmlTables += HtmlRenderLink('/'+strPath,strTable,true);
		strHtmlTables += '</td>';

		strHtmlTables += '<td>';
			var bTableActive = GetValue(status,'tables',strTable,'active'); 
			strHtmlTables += HtmlRenderSpanStatus(bTableActive,!bActive);
		strHtmlTables += '</td>';
		
		strHtmlTables += '<td style="text-align: right;">';
			var nTotal = GetValue(status,'tables',strTable,'total');
			strHtmlTables += ''+GetStringValue(nTotal);
		strHtmlTables += '</td>';		

		strHtmlTables += '<td style="text-align: right;">';
			var nHidden = GetValue(status,'tables',strTable,'hidden');
			strHtmlTables += ''+GetStringValue(nHidden);
		strHtmlTables += '</td>';		

		strHtmlTables += '<td style="text-align: right;">';
			var nUnmaintained = GetValue(status,'tables',strTable,'unmaintained');
			strHtmlTables += ''+GetStringValue(nUnmaintained);
		strHtmlTables += '</td>';		

		strHtmlTables += '<td style="text-align: left;">';
			var strBackmarker = GetStringValue(GetValue(status,'tables',strTable,'backmarker'));
			if (strBackmarker == '')
			{
				if (nTotal == 0)
				{
					strBackmarker = '<span style="color: gray;">No records</span>';
				}
				else
				{
					strBackmarker = '<span style="color: red;">Incomplete</span>';
				}
			}
			else
			{
				strBackmarker = RenderDateTimeUser(strBackmarker);
			}
		strHtmlTables += strBackmarker;
		strHtmlTables += '<td>';

		var strEncodedQuery = 'operation=read^name='+strTable+'^ORname='+strTable+'.*';
		var strPath = GetInstanceListPath('sys_security_acl',GetViewForTable('sys_security_acl'),strEncodedQuery);
		strHtmlTables += HtmlRenderLink(
			'/'+strPath,
			'ACLs',true);
		strHtmlTables += '&#160;|&#160;';

		var strEncodedQuery = 'when=before^action_query=true^collection='+strTable;
		var strPath = GetInstanceListPath('sys_script',GetViewForTable('sys_script'),strEncodedQuery);
		strHtmlTables += HtmlRenderLink(
			'/'+strPath,
			'Before query BRs',true);
		strHtmlTables += '&#160;|&#160;';		
		
		var strEncodedQuery = 'when=before^action_query=true^collection='+strTable;
		var grTable = new GlideRecord('sys_db_object');
		grTable.get('name',strTable);
		if (IsValidRecord(grTable) == true)
		{
			var strPath = GetInstanceRecordPath('sys_db_object',grTable.sys_id);
			strHtmlTables += HtmlRenderLink(
				'/'+strPath,
				'Table Config',true);
			strHtmlTables += '&#160;|&#160;';		
		}
		
		var strEncodedQuery = 'table='+strTable;
		var strPath = GetInstanceListPath('sys_db_view_table',GetViewForTable('sys_db_view_table'),strEncodedQuery);
		strHtmlTables += HtmlRenderLink(
			'/'+strPath,
			'DB Views',true);
		strHtmlTables += '&#160;|&#160;';

		var grTable = new GlideRecord('sys_db_object');
		grTable.addQuery('name','=',strTable);
		grTable.query();
		if (grTable.next())
		{
			var strEncodedQuery = 'table='+grTable.sys_id;
			var strPath = GetInstanceListPath('v_index_creator',GetViewForTable('v_index_creator'),strEncodedQuery);
			strHtmlTables += HtmlRenderLink(
				'/'+strPath,
				'Indexes',true);
			strHtmlTables += '&#160;|&#160;';
		}
		
		
		var strEncodedQuery = 'table_name='+strTable+'^element_nameSTARTSWITH'+GetScopeFromTable(strTable);
		var strPath = GetInstanceListPath('sys_storage_alias',GetViewForTable('sys_storage_alias'),strEncodedQuery);
		strHtmlTables += HtmlRenderLink(
			'/'+strPath,
			'Aliases',true);

		
		strHtmlTables += '<td style="text-align: left;">';
			var strUpdated = GetStringValue(GetValue(status,'tables',strTable,'updated'));
			if (strUpdated != '')
			{
				strUpdated = RenderDateTimeUser(strUpdated);
			}
			strHtmlTables += strUpdated;
		strHtmlTables += '</td>';	
	
		strHtmlTables += '<td>';
			strHtmlTables += HtmlRenderSpanDomainSeparationStatus(strTable);
		strHtmlTables += '</td>';
		
		for (var nColumn = 0; nColumn < aColumns.length; nColumn++)
		{
			
			var strTextAlign = GetStringValue(GetValue(plugin_status,'columns',aColumns[nColumn],'textalign'));
			if (strTextAlign == '')
			{
				strTextAlign = 'left';
			}
			strHtmlTables += '<td style="text-align: '+strTextAlign+';">';
				strHtmlTables += GetStringValue(GetValue(plugin_status,'tables',strTable,aColumns[nColumn]));
			strHtmlTables += '</td>';			
		}		
		
		
		strHtmlTables += '</tr>';
	}
	strHtmlTables += '</tbody></table>';
	strHtml += strHtmlTables;  

	return strHtml;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-04-03 07:45:03</sys_created_on>
        <sys_id>37c3bb11db972490ba15a3530596195f</sys_id>
        <sys_mod_count>77</sys_mod_count>
        <sys_name>HtmlRenderStatus</sys_name>
        <sys_package display_value="DataSilos WORK IN PROGRESS" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="DataSilos WORK IN PROGRESS">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_37c3bb11db972490ba15a3530596195f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-11-07 15:39:00</sys_updated_on>
    </sys_script_include>
</record_update>
