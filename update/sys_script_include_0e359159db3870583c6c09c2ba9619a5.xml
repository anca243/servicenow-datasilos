<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_datasilos.GetStatusPerformance</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Returns an object with current status information about database performance.</description>
        <mobile_callable>false</mobile_callable>
        <name>GetStatusPerformance</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function GetStatusPerformance()
{
	var GetStringValue = x_snc_devtools.GetStringValue;
	var GetIntegerValue = x_snc_devtools.GetIntegerValue;
	var GetValue = x_snc_devtools.GetValue;
	var GetKeys = x_snc_devtools.GetKeys;
	var PerformanceQueryMultiple = x_snc_devtools.PerformanceQueryMultiple;
	var GetPseudoSysId = x_snc_devtools.GetPseudoSysId;
	
	var stopwatch = new x_snc_devtools.StopWatch();

	var strPseudoSysId = GetPseudoSysId();;
		
	var status = GetConfig();

	var aTables = GetKeys(GetValue(status,'tables'));
	for (var nTable = 0; nTable < aTables.length; nTable++)
	{
		var strTable = aTables[nTable];
		var table = GetValue(status,'tables',strTable); 

		var aQueries = [];

		var grQuery = new GlideRecord(strTable);
		grQuery.addActiveQuery();
		PrepareQueryInternal(grQuery, strTable, '', strPseudoSysId, false, [strPseudoSysId], [strPseudoSysId], [strPseudoSysId], 0);
		aQueries.push(
			{
				name: 'List active',
				table: strTable,
				query: grQuery.getEncodedQuery(),
				limit: 0
			});
		
		var grQuery = new GlideRecord(strTable);
		PrepareQueryInternal(grQuery, strTable, '', strPseudoSysId, false, [strPseudoSysId], [strPseudoSysId], [strPseudoSysId], 0);
		aQueries.push(
			{
				name: 'List all',
				table: strTable,
				query: grQuery.getEncodedQuery(),
				limit: 0
			});


		var grQuery = new GlideRecord(strTable);
		aQueries.push(
			{
				name: 'Backmarker',
				table: strTable,
				query: '',
				orderby: GetScopeFromRecord(grQuery)+'_last_maintenance',
				limit: 0
			});
	
		
		var results = PerformanceQueryMultiple(
			aQueries,
			null, // default to the current user
			1);
		
		var queries = [];
		for (var nResult = 0; nResult < results.length; nResult++)
		{
			queries.push({
				'name'        : results[nResult].name,
				'query'       : results[nResult].query,
				'orderby'     : results[nResult].orderby,
				'milliseconds': results[nResult].response_milliseconds_average
			});
		}
		
		table['queries'] = queries;
	}
	
	return status;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-06-16 09:43:44</sys_created_on>
        <sys_id>0e359159db3870583c6c09c2ba9619a5</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>GetStatusPerformance</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy/>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_0e359159db3870583c6c09c2ba9619a5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-05-02 14:17:30</sys_updated_on>
    </sys_script_include>
</record_update>
