<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_datasilos.MaintenanceACLs</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description>Maintain existing ACLs and create missing ACLs required to protect the tables in scope. </description>
        <mobile_callable>false</mobile_callable>
        <name>MaintenanceACLs</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[function MaintenanceACLs()
{
	var bSuccess = true;
	
	var GlideRecordUpdate = x_snc_devtools.GlideRecordUpdate;
	var GlideRecordInsert = x_snc_devtools.GlideRecordInsert;
	var RenderValue = x_snc_devtools.RenderValue;
	var GetStringValue = x_snc_devtools.GetStringValue;
	var StringRemoveCharacters = x_snc_devtools.StringRemoveCharacters;

	function Log(strText)
	{
		x_snc_datasilos.Log('MaintenanceACLs: '+strText);
	}
	function MaintenanceACLsForTable(strTable)
	{
		Log('MaintenanceACLsForTable: ['+strTable+']');

		var grACL = GetDataSilosACL(strTable,'',true);
		if (grACL == false)
		{
			Log('Did not find an ACL named '+strTable+' - so we need to add one!');
			grACL = new GlideRecord('sys_security_acl');
			grACL.initialize();
			grACL.sys_scope = 'global';
			grACL.name = strTable;
			grACL.active = true;
			grACL.operation = 'read';
			grACL.description = 'Data'+'Silos';
			grACL.decision_type = 'deny';
			grACL.advanced = true;
			grACL.script = ModifyACLScript('');
			var bResult = GlideRecordInsert(grACL);
			if (bResult == false)
			{
				Log('ERROR: Failed to insert new ACL!');
				bSuccess = false;
			}	
			else
			{
				Log('New ACL has been inserted successfully.');
			}
		}	
		
		
		var grACL = GetDataSilosACL(strTable,'*',true);
		if (grACL == false)
		{
			Log('Did not find an ACL named '+strTable+'.* - so we need to add one!');
			grACL = new GlideRecord('sys_security_acl');
			grACL.initialize();
			grACL.sys_scope = 'global';
			grACL.name = strTable+'.*';
			grACL.active = true;
			grACL.operation = 'read';
			grACL.description = 'Data'+'Silos';
			grACL.decision_type = 'deny';
			grACL.advanced = true;
			grACL.script = ModifyACLScript('');
			var bResult = GlideRecordInsert(grACL);
			if (bResult == false)
			{
				Log('ERROR: Failed to insert new ACL!');
				bSuccess = false;
			}	
			else
			{
				Log('New ACL has been inserted successfully.');
			}
		}
			
/*		
		var grACL = new GlideRecord('sys_security_acl');
		var condition = grACL.addQuery('name','=',strTable);
		condition.addOrCondition('name','=',strTable+'.*');
		grACL.addActiveQuery();
		grACL.addQuery('type','=','record');
		grACL.addQuery('operation','=','read');
		grACL.query();
		while (grACL.next())
		{
			Log('Active ACL found: '+grACL.name+' / '+grACL.operation+' / '+grACL.sys_id);
			if (grACL.advanced == false)
			{
				Log('ACL is not set to advanced. Adding script...');
				grACL.advanced = true;
				grACL.script = ModifyACLScript('');
				var bResult = GlideRecordUpdate(grACL);
				if (bResult == false)
				{
					Log('ERROR: Failed to update ACL!');
					bSuccess = false;
				}	
				else
				{
					Log('New ACL has been updated successfully.');
				}			
			}
			else
			{
				var strScript = GetStringValue(grACL.script);
				if (CheckACLScript(strScript) == false)
				{
					if (strScript == '')
					{
						Log('ACL is set to advanced, but the script is empty. Adding script...');
						grACL.script = ModifyACLScript('');
						var bResult = GlideRecordUpdate(grACL);
						Log('Update() returned: '+RenderValue(bResult));
						if (bResult == false)
						{
							bSuccess = false;
						}
					}
					else
					{
						Log('ACL is set to advanced, but the script is not compliant. Modifying script...');
						Log('Existing script:');
						Log('\n'+strScript);

						var strScriptNew = ModifyACLScript(strScript);
						var bCheckScript = CheckACLScript(strScriptNew);
						Log('New script:');
						Log('\n'+strScriptNew);
						Log('CheckACLScript: '+RenderValue(bCheckScript));
							
						if (bCheckScript == false)
						{
							Log('WARNING: The ACL contains a script that cannot be changed automatically!');
							bSuccess = false;					
						}
						else
						{
							grACL.script = strScriptNew;
							var strDescription = grACL.description
								+ '\n'
								+ 'DataSilos has modified this ACL script. The original script was:\n'
								+ '___BEGIN___\n'
								+strScript+'\n'
								+'___END___\n';
							grACL.description = strDescription;
							var bResult = GlideRecordUpdate(grACL);
							if (bResult == false)
							{
								Log('ERROR: Failed to update ACL!');
								bSuccess = false;
							}
							else
							{
								Log('ACL updated successfully.');
							}
						}
					}
				}
			}
		}
		*/
		
	}
	
	var aTables = GetAllSupportedTables();
	for (nIndex = 0; nIndex < aTables.length; nIndex++)
	{
		MaintenanceACLsForTable(aTables[nIndex]);
	}
	return bSuccess;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-30 13:28:55</sys_created_on>
        <sys_id>bec75c6d1b167850577f43b5bb4bcb65</sys_id>
        <sys_mod_count>22</sys_mod_count>
        <sys_name>MaintenanceACLs</sys_name>
        <sys_package display_value="DataSilos" source="x_snc_datasilos">dafbffebdbb78450ba15a353059619eb</sys_package>
        <sys_policy/>
        <sys_scope display_value="DataSilos">dafbffebdbb78450ba15a353059619eb</sys_scope>
        <sys_update_name>sys_script_include_bec75c6d1b167850577f43b5bb4bcb65</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-06-03 09:32:14</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>bec75c6d1b167850577f43b5bb4bcb65</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-05-12 08:35:19</sys_created_on>
        <sys_id>97a074589365aa10ae97b4aa6aba1019</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-05-12 08:35:19</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>false</use_es_latest>
    </sys_es_latest_script>
</record_update>
